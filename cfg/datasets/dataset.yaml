# Ultralytics 🚀 AGPL-3.0 License - https://ultralytics.com/license

# COCO128 dataset https://www.kaggle.com/datasets/ultralytics/coco128 (first 128 images from COCO train2017) by Ultralytics
# Documentation: https://docs.ultralytics.com/datasets/detect/coco/
# Example usage: yolo train data=coco128.yaml
# parent
# ├── ultralytics
# └── datasets
#     └── coco128  ← downloads here (7 MB)

# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]

path: E:/TBH/ultralytics-main/ultralytics-main/datasets/NWPU_VHR-10_yolo # ----------------650

#path: E:/TBH/ultralytics-main/ultralytics-main/datasets/DOTA_split/DOTA_split/DOTA # ------------15749

#path: E:/TBH/ultralytics-main/ultralytics-main/datasets/RSODyolo # ----------------611

train: images/train # train images (relative to 'path') 128 images
val: images/val # val images (relative to 'path') 128 images
test: # test images (optional)


# Classes

names:
  0: airplane
  1: ship
  2: storage tank
  3: baseball diamond
  4: tennis court
  5: basketball court
  6: ground track field
  7: harbor
  8: bridge
  9: vehicle


#names:
#  0: small-vehicle
#  1: large-vehicle
#  2: plane
#  3: storage-tank
#  4: ship
#  5: harbor
#  6: ground-track-field
#  7: soccer-ball-field
#  8: tennis-court
#  9: swimming-pool
#  10: baseball-diamond
#  11: roundabout
#  12: basketball-court
#  13: bridge
#  14: helicopter


#names:
#  0: aircraft
#  1: oiltank
#  2: overpass
#  3: playground


# Download script/URL (optional)
# download: https://github.com/ultralytics/assets/releases/download/v0.0.0/coco128.zip
